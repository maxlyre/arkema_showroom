{"version":3,"sources":["Orbit Camera/scripts/mouse-input.js","Orbit Camera/scripts/keyboard-input.js","Orbit Camera/scripts/orbit-camera.js","Orbit Camera/scripts/touch-input.js","Material/custom_shader.js","Script/spawner.js","Script/raycast.js","HTML/ui.js","Script/dataStore.js","Script/jsonReader.js","Empty.js"],"names":[],"mappings":"AACA,IAAI,WAAa,GAAG,aAAa,cAEjC,WAAW,WAAW,IAAI,mBAAoB,CAC1C,KAAM,SACN,QAAS,GACT,MAAO,oBACP,YAAa,iEAGjB,WAAW,WAAW,IAAI,sBAAuB,CAC7C,KAAM,SACN,QAAS,IACT,MAAO,uBACP,YAAa,2DAIjB,WAAW,UAAU,WAAa,WAG9B,GAFA,KAAK,YAAc,KAAK,OAAO,OAAO,YAElC,KAAK,YAAa,CAClB,IAAI,EAAO,KAEP,WAAa,SAAU,GACxB,EAAK,WAAW,IAGnB,KAAK,IAAI,MAAM,GAAG,GAAG,gBAAiB,KAAK,YAAa,MACxD,KAAK,IAAI,MAAM,GAAG,GAAG,cAAe,KAAK,UAAW,MACpD,KAAK,IAAI,MAAM,GAAG,GAAG,gBAAiB,KAAK,YAAa,MACxD,KAAK,IAAI,MAAM,GAAG,GAAG,iBAAkB,KAAK,aAAc,MAG1D,OAAO,iBAAiB,WAAY,YAAY,GAGhD,KAAK,GAAG,WAAW,WACf,KAAK,IAAI,MAAM,IAAI,GAAG,gBAAiB,KAAK,YAAa,MACzD,KAAK,IAAI,MAAM,IAAI,GAAG,cAAe,KAAK,UAAW,MACrD,KAAK,IAAI,MAAM,IAAI,GAAG,gBAAiB,KAAK,YAAa,MACzD,KAAK,IAAI,MAAM,IAAI,GAAG,iBAAkB,KAAK,aAAc,MAE3D,OAAO,oBAAoB,WAAY,YAAY,MAM3D,KAAK,IAAI,MAAM,qBAEf,KAAK,gBAAiB,EACtB,KAAK,eAAgB,EACrB,KAAK,UAAY,IAAI,GAAG,MAI5B,WAAW,eAAiB,IAAI,GAAG,KACnC,WAAW,aAAe,IAAI,GAAG,KACjC,WAAW,UAAY,IAAI,GAAG,KAG9B,WAAW,UAAU,IAAM,SAAS,GAChC,IAAI,EAAiB,WAAW,eAC5B,EAAe,WAAW,aAC1B,EAAY,WAAW,UAIvB,EAAS,KAAK,OAAO,OACrB,EAAW,KAAK,YAAY,SAEhC,EAAO,cAAc,EAAY,EAAG,EAAY,EAAG,EAAU,GAC7D,EAAO,cAAc,KAAK,UAAU,EAAG,KAAK,UAAU,EAAG,EAAU,GAEnE,EAAU,KAAK,EAAc,GAE7B,KAAK,YAAY,WAAW,IAAI,IAIpC,WAAW,UAAU,YAAc,SAAU,GACzC,OAAQ,EAAM,QACV,KAAK,GAAG,iBACJ,KAAK,gBAAiB,EACxB,MAEF,KAAK,GAAG,mBACR,KAAK,GAAG,kBACJ,KAAK,eAAgB,IAMjC,WAAW,UAAU,UAAY,SAAU,GACvC,OAAQ,EAAM,QACV,KAAK,GAAG,iBACJ,KAAK,gBAAiB,EACxB,MAEF,KAAK,GAAG,mBACR,KAAK,GAAG,kBACJ,KAAK,eAAgB,IAMjC,WAAW,UAAU,YAAc,SAAU,GAC7B,GAAG,IAAI,MACf,KAAK,gBACL,KAAK,YAAY,OAAS,EAAM,GAAK,KAAK,iBAC1C,KAAK,YAAY,KAAO,EAAM,GAAK,KAAK,kBAEjC,KAAK,eACZ,KAAK,IAAI,GAGb,KAAK,UAAU,IAAI,EAAM,EAAG,EAAM,IAItC,WAAW,UAAU,aAAe,SAAU,GAC1C,KAAK,YAAY,UAAY,EAAM,MAAQ,KAAK,qBAAmD,GAA5B,KAAK,YAAY,UACxF,EAAM,MAAM,kBAIhB,WAAW,UAAU,WAAa,SAAU,GACxC,KAAK,gBAAiB,EACtB,KAAK,eAAgB,GClIzB,IAAI,cAAgB,GAAG,aAAa,iBAGpC,cAAc,UAAU,WAAa,WACjC,KAAK,YAAc,KAAK,OAAO,OAAO,aAI1C,cAAc,UAAU,eAAiB,WACjC,KAAK,cACL,KAAK,cAAgB,KAAK,YAAY,SACtC,KAAK,SAAW,KAAK,YAAY,IACjC,KAAK,WAAa,KAAK,YAAY,MACnC,KAAK,mBAAqB,KAAK,YAAY,WAAW,UAK9D,cAAc,UAAU,OAAS,SAAS,GAClC,KAAK,aACD,KAAK,IAAI,SAAS,WAAW,GAAG,aAChC,KAAK,YAAY,MAAM,KAAK,SAAU,KAAK,WAAY,KAAK,eAC5D,KAAK,YAAY,WAAa,KAAK,qBCtB/C,IAAI,YAAc,GAAG,aAAa,eAElC,YAAY,WAAW,IAAI,cAAe,CAAC,KAAM,SAAU,QAAS,EAAG,MAAO,eAAgB,YAAa,2DAC3G,YAAY,WAAW,IAAI,cAAe,CAAC,KAAM,SAAU,QAAS,EAAG,MAAO,iBAC9E,YAAY,WAAW,IAAI,gBAAiB,CAAC,KAAM,SAAU,QAAS,GAAI,MAAO,8BACjF,YAAY,WAAW,IAAI,gBAAiB,CAAC,KAAM,SAAU,SAAU,GAAI,MAAO,8BAElF,YAAY,WAAW,IAAI,gBAAiB,CACxC,KAAM,SACN,QAAS,EACT,MAAO,iBACP,YAAa,wHAGjB,YAAY,WAAW,IAAI,cAAe,CACtC,KAAM,SACN,MAAO,eACP,YAAa,0FAGjB,YAAY,WAAW,IAAI,eAAgB,CACvC,KAAM,UACN,SAAS,EACT,MAAO,iBACP,YAAa,iEAMjB,OAAO,eAAe,YAAY,UAAW,WAAY,CACrD,IAAK,WACD,OAAO,KAAK,iBAGhB,IAAK,SAAS,GACV,KAAK,gBAAkB,KAAK,eAAe,MAQnD,OAAO,eAAe,YAAY,UAAW,QAAS,CAClD,IAAK,WACD,OAAO,KAAK,cAGhB,IAAK,SAAS,GACV,KAAK,aAAe,KAAK,iBAAiB,MAMlD,OAAO,eAAe,YAAY,UAAW,MAAO,CAChD,IAAK,WACD,OAAO,KAAK,YAGhB,IAAK,SAAS,GACV,KAAK,WAAa,EAKlB,IACI,GADO,KAAK,WAAa,KAAK,MACZ,IAElB,KAAK,WADL,EAAW,IACO,KAAK,MAAQ,IAAM,GAC9B,GAAY,IACD,KAAK,MAAQ,IAAM,GAEnB,KAAK,KAAO,KAO1C,OAAO,eAAe,YAAY,UAAW,aAAc,CACvD,IAAK,WACD,OAAO,KAAK,aAGhB,IAAK,SAAS,GACV,KAAK,YAAY,KAAK,MAM9B,YAAY,UAAU,MAAQ,SAAU,GAEpC,KAAK,WAAW,EAAa,GAE7B,IAAI,EAAc,KAAK,YAAY,YAE/B,EAAW,KAAK,IAAI,EAAY,EAAG,KAAK,IAAI,EAAY,EAAG,EAAY,IAC3E,GAAuB,KAAK,IAAI,GAAM,KAAK,OAAO,OAAO,IAAM,GAAG,KAAK,YACvE,GAAuB,EAEvB,KAAK,SAAW,EAEhB,KAAK,iBAEL,KAAK,YAAY,KAAK,KAAK,YAAY,SAI3C,YAAY,gBAAkB,IAAI,GAAG,KAIrC,YAAY,UAAU,oBAAsB,SAAU,EAAY,GAC9D,KAAK,WAAW,KAAK,GACrB,KAAK,OAAO,YAAY,GAExB,KAAK,OAAO,OAAO,GAEnB,IAAI,EAAW,YAAY,gBAC3B,EAAS,KAAK,EAAa,GAC3B,KAAK,SAAW,EAAS,SAEzB,KAAK,WAAW,KAAK,GAErB,IAAI,EAAa,KAAK,OAAO,cAC7B,KAAK,IAAM,KAAK,SAAS,GACzB,KAAK,MAAQ,KAAK,WAAW,EAAY,KAAK,KAE9C,KAAK,iBACL,KAAK,mBAMT,YAAY,UAAU,qBAAuB,SAAU,EAAY,GAC/D,KAAK,WAAW,EAAQ,GACxB,KAAK,oBAAoB,EAAY,KAAK,YAAY,SAK1D,YAAY,UAAU,MAAQ,SAAU,EAAK,EAAO,GAChD,KAAK,MAAQ,EACb,KAAK,IAAM,EACX,KAAK,SAAW,EAEhB,KAAK,kBAMT,YAAY,UAAU,WAAa,WAC/B,IAAI,EAAO,KACP,eAAiB,WACjB,EAAK,qBAGT,OAAO,iBAAiB,SAAU,gBAAgB,GAElD,KAAK,oBAGL,KAAK,YAAc,IAAI,GAAG,YAC1B,KAAK,WAAW,KAAK,aAAe,KAAK,IAAI,KAAM,GAEnD,KAAK,OAAO,OAAO,KAAK,YAAY,QAEpC,KAAK,YAAc,IAAI,GAAG,KAC1B,KAAK,YAAY,KAAK,KAAK,YAAY,QAIvC,IAAI,EAAa,KAAK,OAAO,cAe7B,GAZA,KAAK,KAAO,KAAK,SAAS,GAC1B,KAAK,OAAS,KAAK,iBAAiB,KAAK,WAAW,EAAY,KAAK,OACrE,KAAK,OAAO,oBAAoB,KAAK,OAAQ,KAAK,KAAM,GAExD,KAAK,UAAY,EAEjB,KAAK,WAAa,KAAK,KACvB,KAAK,aAAe,KAAK,OAKrB,KAAK,aACL,KAAK,MAAM,KAAK,aAAe,KAAK,IAAI,UACrC,CACH,IAAI,EAAkB,IAAI,GAAG,KAC7B,EAAgB,KAAK,KAAK,OAAO,cAAe,KAAK,aACrD,KAAK,UAAY,KAAK,eAAe,EAAgB,UAGzD,KAAK,gBAAkB,KAAK,UAG5B,KAAK,GAAG,oBAAoB,SAAU,EAAO,GACzC,KAAK,gBAAkB,KAAK,eAAe,KAAK,cAGpD,KAAK,GAAG,oBAAoB,SAAU,EAAO,GACzC,KAAK,gBAAkB,KAAK,eAAe,KAAK,cAGpD,KAAK,GAAG,sBAAsB,SAAU,EAAO,GAC3C,KAAK,aAAe,KAAK,iBAAiB,KAAK,WAGnD,KAAK,GAAG,sBAAsB,SAAU,EAAO,GAC3C,KAAK,aAAe,KAAK,iBAAiB,KAAK,WAInD,KAAK,GAAG,oBAAoB,SAAU,EAAO,GACrC,KAAK,aACL,KAAK,MAAM,GAAS,KAAK,IAAI,MAE7B,KAAK,qBAAqB,KAAK,OAAO,cAAe,GAAS,KAAK,IAAI,SAI/E,KAAK,GAAG,qBAAqB,SAAU,EAAO,GACtC,GACA,KAAK,MAAM,KAAK,aAAe,KAAK,IAAI,SAIhD,KAAK,GAAG,WAAW,WACf,OAAO,oBAAoB,SAAU,gBAAgB,OAK7D,YAAY,UAAU,OAAS,SAAS,GAEpC,IAAI,EAA2B,IAAvB,KAAK,cAAsB,EAAI,KAAK,IAAI,EAAK,KAAK,cAAe,GACzE,KAAK,UAAY,GAAG,KAAK,KAAK,KAAK,UAAW,KAAK,gBAAiB,GACpE,KAAK,KAAO,GAAG,KAAK,KAAK,KAAK,KAAM,KAAK,WAAY,GACrD,KAAK,OAAS,GAAG,KAAK,KAAK,KAAK,OAAQ,KAAK,aAAc,GAE3D,KAAK,mBAIT,YAAY,UAAU,gBAAkB,WAEpC,KAAK,OAAO,iBAAiB,EAAE,EAAE,GACjC,KAAK,OAAO,oBAAoB,KAAK,OAAQ,KAAK,KAAM,GAExD,IAAI,EAAW,KAAK,OAAO,cAC3B,EAAS,KAAK,KAAK,OAAO,SAC1B,EAAS,OAAO,KAAK,WACrB,EAAS,IAAI,KAAK,YAClB,KAAK,OAAO,YAAY,IAI5B,YAAY,UAAU,eAAiB,WACnC,KAAK,KAAO,KAAK,WACjB,KAAK,OAAS,KAAK,aACnB,KAAK,UAAY,KAAK,iBAI1B,YAAY,UAAU,kBAAoB,WACtC,IAAI,EAAS,KAAK,IAAI,eAAe,OACjC,EAAQ,KAAK,IAAI,eAAe,MAIpC,KAAK,OAAO,OAAO,cAAgB,EAAS,GAIhD,YAAY,UAAU,WAAa,SAAU,EAAQ,GAEjD,IAAI,EAAI,EAAG,EAAI,EACX,EAAgB,KAChB,EAAmB,GAEnB,EAAU,EAAO,eAAe,UACpC,IAAK,EAAI,EAAG,EAAI,EAAQ,SAAU,EAE9B,IADA,EAAgB,EAAQ,GAAG,cACtB,EAAI,EAAG,EAAI,EAAc,OAAQ,IAClC,EAAiB,KAAK,EAAc,IAI5C,IAAI,EAAS,EAAO,eAAe,SACnC,IAAK,EAAI,EAAG,EAAI,EAAO,SAAU,EAE7B,IADA,EAAgB,EAAO,GAAG,cACrB,EAAI,EAAG,EAAI,EAAc,OAAQ,IAClC,EAAiB,KAAK,EAAc,IAI5C,IAAK,EAAI,EAAG,EAAI,EAAiB,OAAQ,IACjB,IAAhB,EACA,KAAK,YAAY,KAAK,EAAiB,GAAG,MAE1C,KAAK,YAAY,IAAI,EAAiB,GAAG,MAG7C,GAAe,EAInB,OAAO,GAIX,YAAY,UAAU,SAAW,SAAU,GACvC,IAAI,EAAqB,IAAI,GAAG,KAGhC,OAFA,EAAK,gBAAgB,GAAG,KAAK,QAAS,GAE/B,KAAK,OAAO,EAAmB,GAAI,EAAmB,GAAK,GAAG,KAAK,YAI9E,YAAY,UAAU,eAAiB,SAAU,GAC7C,OAAI,KAAK,YAAc,EACZ,GAAG,KAAK,MAAM,EAAU,KAAK,YAAa,KAAK,aAE/C,KAAK,IAAI,EAAU,KAAK,cAKvC,YAAY,UAAU,iBAAmB,SAAU,GAE/C,OAAO,GAAG,KAAK,MAAM,GAAQ,KAAK,eAAgB,KAAK,gBAI3D,YAAY,eAAiB,IAAI,GAAG,KACpC,YAAY,UAAY,IAAI,GAAG,KAE/B,YAAY,UAAU,WAAa,SAAS,EAAM,GAC9C,IAAI,EAAiB,YAAY,eAC7B,EAAY,YAAY,UAE5B,EAAU,mBAAmB,GAAI,EAAK,GACtC,EAAe,KAAK,EAAW,GAE/B,IAAI,EAAqB,IAAI,GAAG,KAIhC,OAFA,EAAe,gBAAgB,GAAG,KAAK,QAAS,GAEzC,KAAK,MAAM,EAAmB,GAAI,EAAmB,GAAK,GAAG,KAAK,YCnW7E,IAAI,WAAa,GAAG,aAAa,cAEjC,WAAW,WAAW,IAAI,mBAAoB,CAC1C,KAAM,SACN,QAAS,GACT,MAAO,oBACP,YAAa,iEAGjB,WAAW,WAAW,IAAI,sBAAuB,CAC7C,KAAM,SACN,QAAS,GACT,MAAO,uBACP,YAAa,2DAIjB,WAAW,UAAU,WAAa,WAC9B,KAAK,YAAc,KAAK,OAAO,OAAO,YAGtC,KAAK,eAAiB,IAAI,GAAG,KAC7B,KAAK,kBAAoB,IAAI,GAAG,KAChC,KAAK,kBAAoB,EAErB,KAAK,aAAe,KAAK,IAAI,QAG7B,KAAK,IAAI,MAAM,GAAG,GAAG,iBAAkB,KAAK,sBAAuB,MACnE,KAAK,IAAI,MAAM,GAAG,GAAG,eAAgB,KAAK,sBAAuB,MACjE,KAAK,IAAI,MAAM,GAAG,GAAG,kBAAmB,KAAK,sBAAuB,MAEpE,KAAK,IAAI,MAAM,GAAG,GAAG,gBAAiB,KAAK,YAAa,MAExD,KAAK,GAAG,WAAW,WACf,KAAK,IAAI,MAAM,IAAI,GAAG,iBAAkB,KAAK,sBAAuB,MACpE,KAAK,IAAI,MAAM,IAAI,GAAG,eAAgB,KAAK,sBAAuB,MAClE,KAAK,IAAI,MAAM,IAAI,GAAG,kBAAmB,KAAK,sBAAuB,MAErE,KAAK,IAAI,MAAM,IAAI,GAAG,gBAAiB,KAAK,YAAa,WAMrE,WAAW,UAAU,iBAAmB,SAAU,EAAQ,GAEtD,IAAI,EAAK,EAAO,EAAI,EAAO,EACvB,EAAK,EAAO,EAAI,EAAO,EAE3B,OAAO,KAAK,KAAM,EAAK,EAAO,EAAK,IAIvC,WAAW,UAAU,aAAe,SAAU,EAAQ,EAAQ,GAC1D,EAAO,IAAI,EAAO,EAAI,EAAO,EAAG,EAAO,EAAI,EAAO,GAClD,EAAO,MAAM,IACb,EAAO,GAAK,EAAO,EACnB,EAAO,GAAK,EAAO,GAIvB,WAAW,UAAU,sBAAwB,SAAS,GAGlD,IAAI,EAAU,EAAM,QACE,GAAlB,EAAQ,OACR,KAAK,eAAe,IAAI,EAAQ,GAAG,EAAG,EAAQ,GAAG,GAExB,GAAlB,EAAQ,SAEf,KAAK,kBAAoB,KAAK,iBAAiB,EAAQ,GAAI,EAAQ,IACnE,KAAK,aAAa,EAAQ,GAAI,EAAQ,GAAI,KAAK,qBAKvD,WAAW,eAAiB,IAAI,GAAG,KACnC,WAAW,aAAe,IAAI,GAAG,KACjC,WAAW,UAAY,IAAI,GAAG,KAG9B,WAAW,UAAU,IAAM,SAAS,GAChC,IAAI,EAAiB,WAAW,eAC5B,EAAe,WAAW,aAC1B,EAAY,WAAW,UAIvB,EAAS,KAAK,OAAO,OACrB,EAAW,KAAK,YAAY,SAEhC,EAAO,cAAc,EAAS,EAAG,EAAS,EAAG,EAAU,GACvD,EAAO,cAAc,KAAK,kBAAkB,EAAG,KAAK,kBAAkB,EAAG,EAAU,GAEnF,EAAU,KAAK,EAAc,GAE7B,KAAK,YAAY,WAAW,IAAI,IAIpC,WAAW,cAAgB,IAAI,GAAG,KAElC,WAAW,UAAU,YAAc,SAAS,GACxC,IAAI,EAAgB,WAAW,cAI3B,EAAU,EAAM,QACpB,GAAsB,GAAlB,EAAQ,OAAa,CACrB,IAAI,EAAQ,EAAQ,GAEpB,KAAK,YAAY,QAAU,EAAM,EAAI,KAAK,eAAe,GAAK,KAAK,iBACnE,KAAK,YAAY,MAAQ,EAAM,EAAI,KAAK,eAAe,GAAK,KAAK,iBAEjE,KAAK,eAAe,IAAI,EAAM,EAAG,EAAM,QAEpC,GAAsB,GAAlB,EAAQ,OAAa,CAE5B,IAAI,EAAuB,KAAK,iBAAiB,EAAQ,GAAI,EAAQ,IACjE,EAAsB,EAAuB,KAAK,kBACtD,KAAK,kBAAoB,EAEzB,KAAK,YAAY,UAAa,EAAsB,KAAK,oBAAsB,IAAoC,GAA5B,KAAK,YAAY,UAGxG,KAAK,aAAa,EAAQ,GAAI,EAAQ,GAAI,GAC1C,KAAK,IAAI,GACT,KAAK,kBAAkB,KAAK,KChIpC,IAAI,aAAe,GAAG,aAAa,gBAEnC,aAAa,WAAW,IAAI,KAAM,CAC9B,KAAM,QACN,UAAW,SACX,MAAO,kBAGX,aAAa,WAAW,IAAI,KAAM,CAC9B,KAAM,QACN,UAAW,SACX,MAAO,oBAIX,aAAa,WAAW,IAAI,aAAc,CACtC,KAAM,OACN,MAAO,gBAEX,aAAa,WAAW,IAAI,kBAAmB,CAC3C,KAAM,OACN,MAAO,4BAEX,aAAa,WAAW,IAAI,UAAW,CACnC,KAAM,OACN,MAAO,cAEX,aAAa,WAAW,IAAI,aAAc,CACtC,KAAM,OACN,MAAO,uBAEX,aAAa,WAAW,IAAI,iBAAkB,CAC1C,KAAM,OACN,MAAO,2BAIX,aAAa,WAAW,IAAI,QAAS,CACjC,KAAM,SACN,MAAO,eACP,QAAQ,KAEZ,aAAa,WAAW,IAAI,aAAc,CACtC,KAAM,SACN,MAAO,2BACP,QAAQ,KAEZ,aAAa,WAAW,IAAI,KAAM,CAC9B,KAAM,SACN,MAAO,aACP,QAAQ,KAEZ,aAAa,WAAW,IAAI,QAAS,CACjC,KAAM,SACN,MAAO,sBACP,QAAQ,KAEZ,aAAa,WAAW,IAAI,YAAa,CACrC,KAAM,SACN,MAAO,0BACP,QAAQ,KAIZ,aAAa,UAAU,WAAa,WAChC,KAAK,KAAO,EAEF,KAAK,IAEf,IAAI,GAAe,IAAI,GAAG,kBAAmB,MAAM,KAAK,OAAO,MAAM,MAAM,cAAc,GAAG,UAK5F,EAAa,OAAO,UAAY,KAAK,GAAG,SAEpC,EAAa,WAAa,IAAI,GAAG,QAAQ,KAAK,IAAI,eAAgB,CAC9D,MAAO,EACP,OAAQ,EACR,OAAQ,GAAG,uBAGnB,EAAa,aAAa,cAAe,IAAI,GAAG,KAAK,KAAK,WAAW,EAAE,KAAK,WAAW,EAAE,KAAK,WAAW,GAAG,MAC5G,EAAa,aAAa,mBAAoB,IAAI,GAAG,KAAK,KAAK,gBAAgB,EAAE,KAAK,gBAAgB,EAAE,KAAK,gBAAgB,GAAG,MAChI,EAAa,aAAa,WAAY,IAAI,GAAG,KAAK,KAAK,QAAQ,EAAE,KAAK,QAAQ,EAAE,KAAK,QAAQ,GAAG,MAChG,EAAa,aAAa,cAAe,IAAI,GAAG,KAAK,KAAK,WAAW,EAAE,KAAK,WAAW,EAAE,KAAK,WAAW,GAAG,MAC5G,EAAa,aAAa,kBAAmB,IAAI,GAAG,KAAK,KAAK,eAAe,EAAE,KAAK,eAAe,EAAE,KAAK,eAAe,GAAG,MAE3H,EAAa,aAAa,SAAU,KAAK,OAC1C,EAAa,aAAa,cAAe,KAAK,YAC9C,EAAa,aAAa,MAAO,KAAK,IACtC,EAAa,aAAa,SAAU,KAAK,OACzC,EAAa,aAAa,aAAc,KAAK,WAG7C,EAAa,SACb,KAAK,OAAO,MAAM,MAAM,cAAc,GAAG,SAAW,EAEpD,IAAI,EAAc,IAAI,GAAG,iBACtB,KAAK,UAAW,EACd,EAAY,QAAQ,IAAI,KAAK,eAAe,EAAE,KAAK,eAAe,EAAE,KAAK,eAAe,GAEpF,KAAK,MAAM,EAChB,EAAY,QAAQ,IAAI,KAAK,WAAW,EAAE,KAAK,WAAW,EAAE,KAAK,WAAW,GAEvE,KAAK,GAAK,EACd,EAAY,QAAQ,IAAI,KAAK,QAAQ,EAAE,KAAK,QAAQ,EAAE,KAAK,QAAQ,GAE/D,KAAK,WAAY,EACtB,EAAY,QAAQ,IAAI,KAAK,gBAAgB,EAAE,KAAK,gBAAgB,EAAE,KAAK,gBAAgB,GAG3F,EAAY,QAAQ,IAAI,KAAK,WAAW,EAAE,KAAK,WAAW,EAAE,KAAK,WAAW,GAGhF,EAAY,SACZ,KAAK,OAAO,MAAM,MAAM,cAAc,GAAG,SAAW,GAoExD,aAAa,UAAU,OAAS,SAAS,KAKzC,aAAa,UAAU,cAAgB,SAAS,KC7LhD,IAAI,QAAU,GAAG,aAAa,WAE1B,YAAc,IACd,OAAQ,EACR,SAAW,IACX,SAAW,IAIf,QAAQ,UAAU,WAAa,aAO/B,QAAQ,UAAU,OAAS,SAAS,KAKpC,QAAQ,UAAU,MAAQ,SAAS,GAC/B,IAAI,EAAE,EAAE,EAAE,EAAK,MAAM,OAAO,IAAI,CAC5B,IACI,EADgB,KAAK,IAAI,OAAO,IAAI,UACX,SAAS,cAIlC,EAAK,EAAK,MAAM,GAAG,IACnB,EAAI,EAAK,MAAM,GAAG,KAClB,GAAS,GAAG,IAAM,KAAK,GAAG,KAC1B,GAAS,EAAI,MAAM,KAAK,GAAG,KAG3B,GAAM,OAAW,KAAK,IAAI,GAAK,KAAK,IAAI,GACxC,EAAK,OAAW,KAAK,IAAI,GAAK,KAAK,IAAI,GACvC,EAAK,OAAW,KAAK,IAAI,GAC7B,EAAS,iBACJ,EAAE,EAAE,GAET,EAAS,OAAO,IAAI,GAAG,KAAK,EAAE,EAAE,IAChC,EAAS,YAAY,GAAG,EAAI,GAC5B,IAAI,EAAS,EAAK,MAAM,GAAG,SAAS,IAAI,EAAK,OAAO,GAAG,EAAK,OAAO,GAAG,SAAS,UAC9E,EAAS,cAAc,GAAI,EAAO,IAEnC,EAAS,KAAK,QAAQ,EAGtB,EAAS,OAAO,aAAa,MAAQ,EAAK,MAAM,GAAG,UAAU,MAC7D,EAAS,OAAO,aAAa,WAAa,EAAK,MAAM,GAAG,UAAU,WAClE,EAAS,OAAO,aAAa,GAAK,EAAK,MAAM,GAAG,UAAU,GAC1D,EAAS,OAAO,aAAa,MAAQ,EAAK,MAAM,GAAG,UAAU,MAC7D,EAAS,OAAO,aAAa,UAAY,EAAK,MAAM,GAAG,UAAU,UAEjE,EAAS,UAAW,EAAK,MAAM,GAAG,MAClC,EAAS,SAAS,GAAG,UAAU,YAAc,IAAI,GAAG,KAAK,GAAK,EAAQ,IAItE,KAAK,IAAI,KAAK,SAAS,KAI/B,OAAO,UAAU,IAAM,SAAU,EAAQ,EAAQ,EAAS,GACxD,OAAQ,KAAO,IAAW,EAAU,IAAY,EAAS,GAAU,GChErE,IACI,SADA,QAAU,GAAG,aAAa,WAG9B,QAAQ,UAAU,WAAa,WAC1B,SAAW,KAAK,IAAI,KAAK,WAAW,MAChC,KAAK,OAAO,QAMjB,KAAK,IAAI,MAAM,GAAG,GAAG,gBAAiB,KAAK,UAAW,MAGlD,KAAK,IAAI,OACT,KAAK,IAAI,MAAM,GAAG,GAAG,iBAAkB,KAAK,WAAY,OATxD,QAAQ,MAAM,sEAatB,QAAQ,UAAU,UAAY,SAAU,GACpC,KAAK,UAAU,EAAE,EAAG,EAAE,IAG1B,QAAQ,UAAU,WAAa,SAAU,GAEZ,IAArB,EAAE,QAAQ,QACV,KAAK,UAAU,EAAE,QAAQ,GAAG,EAAG,EAAE,QAAQ,GAAG,GAEhD,EAAE,MAAM,kBAGZ,QAAQ,UAAU,UAAY,SAAU,EAAS,GAG7C,IAAI,EAAO,KAAK,OAAO,cAGnB,EAAK,KAAK,OAAO,OAAO,cAAc,EAAS,EAAS,KAAK,OAAO,OAAO,SAG3E,EAAS,KAAK,IAAI,QAAQ,UAAU,aAAa,EAAM,GAE3D,GAAI,EAAQ,CACR,IAAI,EAAY,EAAO,OACF,SAAlB,EAAU,MACR,SAAS,OAAO,GAAG,OAAO,EAAU,OAAO,aC7CxD,IAMI,MANA,GAAK,GAAG,aAAa,MAEzB,GAAG,WAAW,IAAI,MAAO,CAAC,KAAM,QAAS,UAAU,MAAO,MAAO,cACjE,GAAG,WAAW,IAAI,OAAQ,CAAC,KAAM,QAAS,UAAU,OAAQ,MAAO,eAInE,IAAI,UAAW,EACX,WAAY,EACZ,SAAU,EACV,YAAa,EACb,YAAa,EACb,kBAAoB,KACpB,MAAQ,GACZ,GAAG,UAAU,WAAa,WAEtB,IAAI,EAAQ,SAAS,cAAc,SAGnC,SAAS,KAAK,YAAY,GAC1B,EAAM,UAAY,KAAK,IAAI,UAAY,GAGvC,KAAK,IAAM,SAAS,cAAc,OAClC,KAAK,IAAI,UAAU,IAAI,aACvB,KAAK,IAAI,UAAY,KAAK,KAAK,UAAY,GAE3C,GAAG,IAAI,eAAe,OAAO,WAAW,YAAY,KAAK,KAEzD,KAAK,IAAI,iBAAiB,aAAY,SAAS,GAC3C,EAAE,qBAEN,KAAK,oBACL,MAAQ,KAAK,IAAI,KAAK,WAAW,UAAU,OAAO,aAItD,GAAG,UAAU,OAAQ,SAAS,GAE5B,IAAI,EAAW,SAAS,cAAc,YAGlC,EAAO,SAAS,cAAc,kBAChC,EAAK,UAAW,GAChB,IAAI,IAAI,EAAG,EAAE,EAAE,EAAK,OAAO,IAAI,CAC3B,IAAI,EAAQ,SAAS,WAAW,EAAS,SAAS,GAElD,EAAM,cAAc,SAAS,YAAc,EAAK,GAAG,KACnD,EAAM,cAAc,YAAY,YAAc,EAAK,GAAG,QACtD,EAAM,cAAc,SAAS,YAAc,EAAK,GAAG,KACnD,EAAM,cAAc,SAAS,YAAc,EAAK,GAAG,KACnD,EAAM,cAAc,aAAa,YAAc,EAAK,GAAG,SAEvD,EAAK,YAAY,KAKzB,GAAG,UAAU,kBAAoB,WAC7B,SAAS,cAAc,eAAe,iBAAiB,aAAY,SAAS,GACxE,IAAI,EAAO,SAAS,cAAc,kBAClC,EAAK,SAAS,CACX,IAAM,EAAK,UAAU,IACpB,SAAU,WAEd,EAAE,qBAEN,SAAS,cAAc,kBAAkB,iBAAiB,aAAY,SAAS,GAC3E,IAAI,EAAO,SAAS,cAAc,kBAClC,EAAK,SAAS,CACX,IAAM,EAAK,UAAU,IACpB,SAAU,WAEd,EAAE,qBAGN,SAAS,cAAc,aAAa,iBAAiB,aAAY,SAAS,GACtE,UAAW,EACX,YAAY,EACZ,aAAa,mBACb,EAAE,qBAEN,SAAS,cAAc,cAAc,iBAAiB,aAAY,SAAS,GACvE,WAAY,EACZ,YAAY,EACZ,aAAa,mBACb,EAAE,qBAEN,SAAS,cAAc,YAAY,iBAAiB,aAAY,SAAS,GACrE,SAAU,EACV,YAAY,EACZ,aAAa,mBACb,EAAE,qBAEN,SAAS,cAAc,eAAe,iBAAiB,aAAY,SAAS,GACxE,YAAa,EACb,YAAY,EACZ,aAAa,mBACb,EAAE,qBAGN,SAAS,cAAc,QAAQ,iBAAiB,WAAU,SAAS,GAChE,UAAU,EACT,WAAW,EACX,SAAS,EACT,YAAY,EACZ,kBAAoB,YAAW,WAC3B,YAAY,IACd,SAKV,GAAG,UAAU,OAAS,SAAS,GACxB,SACC,MAAM,KAAO,EAAG,MACX,UACL,MAAM,KAAO,EAAG,MACX,QACJ,MAAM,OAAS,EAAG,MACd,WACL,MAAM,OAAS,EAAG,MACb,aACL,MAAM,KAAO,IC3HrB,IAAI,UAAY,GAAG,aAAa,aAE5B,KAAM,CACN,QAAU,GACV,KAAO,GACP,KAAK,GACL,SAAS,GAGb,UAAU,UAAU,WAAa,SAAS,GAC9B,IAAI,GAAG,MAAM,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,GAC/D,IAAI,EAAW,IAAI,GAAG,cACtB,EAAS,MAAM,IAAI,KAAK,SAAS,KAAK,SAAS,KAAK,UACpD,EAAS,SACT,KAAK,OAAO,MAAM,MAAM,cAAc,GAAG,SAAW,GAGxD,UAAU,UAAU,QAAU,WAC1B,OAAO,MAGX,UAAU,UAAU,OAAS,SAAS,KCrBtC,IAAI,WAAa,GAAG,aAAa,aAE7B,SAAW,GACX,SAAW,CACX,OAAS,GACT,MAAM,IAGV,WAAW,WAAW,IAAI,WAAY,CAClC,KAAM,QACN,UAAW,SAGf,WAAW,WAAW,IAAI,gBAAiB,CACvC,KAAM,SACN,QAAS,IAEb,WAAW,WAAW,IAAI,iBAAkB,CACxC,KAAM,SACN,QAAS,IAEb,WAAW,WAAW,IAAI,SAAU,CAChC,KAAM,SACN,QAAS,IAGb,WAAW,WAAW,IAAI,WAAY,CAClC,KAAM,UACN,SAAS,IAIb,WAAW,UAAU,WAAa,WAC3B,KAAK,WACJ,SAAW,KAAK,SAAS,SACzB,KAAK,SAET,KAAK,IAAI,GAAG,YAAY,SAAU,GAC9B,SAAW,EAEX,KAAK,UACN,OAGP,WAAW,UAAU,MAAQ,WACzB,KAAK,WAAW,UAChB,KAAK,cACL,KAAK,cACL,KAAK,WACL,IAAI,EAAO,KAAK,SAChB,SAAS,OAAS,CAAC,EAAK,EAAE,EAAK,GAC/B,KAAK,OAAO,OAAO,QAAQ,MAAM,WAGrC,WAAW,UAAU,OAAS,SAAS,KAIvC,WAAW,UAAU,WAAa,SAAS,GACvC,IAAI,EAAO,EAAS,KAAK,MAAM,GAC/B,KAAM,EAAK,OAAQ,GAAG,CAClB,IAAI,EAAO,CACP,SAAW,EACX,MAAO,IAEX,EAAK,GAAG,IAAM,WAAW,EAAK,GAAG,KACjC,EAAK,GAAG,KAAO,WAAW,EAAK,GAAG,MAClC,EAAK,GAAG,SAAW,SAAS,EAAK,GAAG,UACpC,EAAK,MAAM,KAAK,EAAK,IACrB,EAAK,SAAW,EAAK,GAAG,SAGxB,IAAK,IAAI,EAAI,EAAK,OAAS,EAAG,GAAK,EAAG,IACjC,GAAO,GAAJ,EAAO,CACU,IAAI,GAAG,KAAK,WAAW,EAAK,GAAG,KAAK,WAAW,EAAK,GAAG,OAAO,SAAS,IAAI,GAAG,KAAK,WAAW,EAAK,GAAG,KAAK,WAAW,EAAK,GAAG,QAClI,KAAK,eAAiB,EAAK,GAAG,SAAW,EAAK,GAAG,UAC1D,EAAK,GAAG,IAAM,WAAW,EAAK,GAAG,KACjC,EAAK,GAAG,KAAO,WAAW,EAAK,GAAG,MAClC,EAAK,GAAG,SAAW,SAAS,EAAK,GAAG,UACnC,EAAK,UAAU,SAAS,EAAK,GAAG,UAChC,EAAK,MAAM,KAAK,EAAK,IACrB,EAAK,OAAO,EAAE,IAK3B,EAAK,OAAO,EAAE,GACd,SAAS,MAAM,KAAK,KAG5B,WAAW,UAAU,YAAc,WAC9B,IAAI,EAAE,EAAE,EAAE,SAAS,MAAM,OAAO,IAAI,CAChC,IAAI,EAAO,EACP,EAAO,EAEX,IAAI,EAAE,EAAE,EAAE,SAAS,MAAM,GAAG,MAAM,OAAO,IACrC,GAAO,SAAS,MAAM,GAAG,MAAM,GAAG,IAClC,GAAQ,SAAS,MAAM,GAAG,MAAM,GAAG,KAEvC,GAAU,SAAS,MAAM,GAAG,MAAM,OAClC,GAAY,SAAS,MAAM,GAAG,MAAM,OACpC,SAAS,MAAM,GAAG,IAAM,EACxB,SAAS,MAAM,GAAG,KAAO,IAGlC,WAAW,UAAU,YAAc,WAC/B,IAAI,EAAE,EAAE,EAAE,SAAS,MAAM,OAAO,IAC5B,IAAK,EAAE,EAAE,EAAE,SAAS,MAAM,OAAO,IAC5B,GAAG,GAAI,EAAG,CACP,IAAI,EAAQ,IAAI,GAAG,KAAK,SAAS,MAAM,GAAG,IAAI,SAAS,MAAM,GAAG,MAC5D,EAAQ,IAAI,GAAG,KAAK,SAAS,MAAM,GAAG,IAAI,SAAS,MAAM,GAAG,MAE/D,GADe,EAAM,SAAS,GAClB,KAAK,eAAe,CAC5B,IAAI,EAAY,EAAM,IAAI,GAC1B,EAAU,YACV,SAAS,MAAM,GAAG,KAAO,EAAU,EAAE,KAAK,OAAO,EACjD,SAAS,MAAM,GAAG,MAAQ,EAAU,EAAE,KAAK,OAAO,EAClD,SAAS,MAAM,GAAG,KAAO,EAAU,EAAE,KAAK,OAAO,EACjD,SAAS,MAAM,GAAG,MAAQ,EAAU,EAAE,KAAK,OAAO,KAOvE,WAAW,UAAU,SAAW,WAC5B,IAAI,EAAE,EAAE,EAAE,SAAS,MAAM,OAAO,IAAI,CAChC,IAAI,EAAY,CACZ,MAAM,EACN,WAAW,EACX,GAAG,EACH,MAAM,EACN,UAAU,GAEd,IAAI,EAAE,EAAE,EAAE,SAAS,MAAM,GAAG,MAAM,OAAO,IAAI,CACzC,IAAI,EAAQ,SAAS,MAAM,GAAG,MAAM,GAAG,SAAS,SAAS,MAAM,GAAG,SAClE,OAAQ,SAAS,MAAM,GAAG,MAAM,GAAG,MACjC,IAAK,sBACC,EAAU,OAAO,EACrB,MACF,IAAK,qBACC,EAAU,YAAY,EAC1B,MACF,IAAK,aACC,EAAU,IAAI,EAClB,MACF,IAAK,eACC,EAAU,OAAO,EACrB,MACF,IAAK,mBACC,EAAU,WAAW,GAMjC,SAAS,MAAM,GAAG,UAAY,IAItC,WAAW,UAAU,OAAS,WAC1B,IAAI,EAAQ,IAAI,GAAG,KAAK,MAAM,GAC9B,IAAI,EAAE,EAAE,EAAE,SAAS,MAAM,OAAO,IACzB,SAAS,MAAM,GAAG,SAAS,EAAO,IACjC,EAAO,EAAI,SAAS,MAAM,GAAG,UAE9B,SAAS,MAAM,GAAG,SAAS,EAAO,IACjC,EAAO,EAAI,SAAS,MAAM,GAAG,UAGrC,OAAO,GASX,WAAW,UAAU,QAAU,IACpB,SCpLX,GAAG,OAAO,qBAAoB,SAAU","sourcesContent":["// mouse-input.js\nvar MouseInput = pc.createScript('mouseInput');\n\nMouseInput.attributes.add('orbitSensitivity', {\n    type: 'number', \n    default: 0.3, \n    title: 'Orbit Sensitivity', \n    description: 'How fast the camera moves around the orbit. Higher is faster'\n});\n\nMouseInput.attributes.add('distanceSensitivity', {\n    type: 'number', \n    default: 0.15, \n    title: 'Distance Sensitivity', \n    description: 'How fast the camera moves in and out. Higher is faster'\n});\n\n// initialize code called once per entity\nMouseInput.prototype.initialize = function() {\n    this.orbitCamera = this.entity.script.orbitCamera;\n        \n    if (this.orbitCamera) {\n        var self = this;\n        \n        var onMouseOut = function (e) {\n           self.onMouseOut(e);\n        };\n        \n        this.app.mouse.on(pc.EVENT_MOUSEDOWN, this.onMouseDown, this);\n        this.app.mouse.on(pc.EVENT_MOUSEUP, this.onMouseUp, this);\n        this.app.mouse.on(pc.EVENT_MOUSEMOVE, this.onMouseMove, this);\n        this.app.mouse.on(pc.EVENT_MOUSEWHEEL, this.onMouseWheel, this);\n\n        // Listen to when the mouse travels out of the window\n        window.addEventListener('mouseout', onMouseOut, false);\n        \n        // Remove the listeners so if this entity is destroyed\n        this.on('destroy', function() {\n            this.app.mouse.off(pc.EVENT_MOUSEDOWN, this.onMouseDown, this);\n            this.app.mouse.off(pc.EVENT_MOUSEUP, this.onMouseUp, this);\n            this.app.mouse.off(pc.EVENT_MOUSEMOVE, this.onMouseMove, this);\n            this.app.mouse.off(pc.EVENT_MOUSEWHEEL, this.onMouseWheel, this);\n\n            window.removeEventListener('mouseout', onMouseOut, false);\n        });\n    }\n    \n    // Disabling the context menu stops the browser displaying a menu when\n    // you right-click the page\n    this.app.mouse.disableContextMenu();\n  \n    this.lookButtonDown = false;\n    this.panButtonDown = false;\n    this.lastPoint = new pc.Vec2();\n};\n\n\nMouseInput.fromWorldPoint = new pc.Vec3();\nMouseInput.toWorldPoint = new pc.Vec3();\nMouseInput.worldDiff = new pc.Vec3();\n\n\nMouseInput.prototype.pan = function(screenPoint) {\n    var fromWorldPoint = MouseInput.fromWorldPoint;\n    var toWorldPoint = MouseInput.toWorldPoint;\n    var worldDiff = MouseInput.worldDiff;\n    \n    // For panning to work at any zoom level, we use screen point to world projection\n    // to work out how far we need to pan the pivotEntity in world space \n    var camera = this.entity.camera;\n    var distance = this.orbitCamera.distance;\n    \n    camera.screenToWorld(screenPoint.x, screenPoint.y, distance, fromWorldPoint);\n    camera.screenToWorld(this.lastPoint.x, this.lastPoint.y, distance, toWorldPoint);\n\n    worldDiff.sub2(toWorldPoint, fromWorldPoint);\n       \n    this.orbitCamera.pivotPoint.add(worldDiff);    \n};\n\n\nMouseInput.prototype.onMouseDown = function (event) {\n    switch (event.button) {\n        case pc.MOUSEBUTTON_LEFT: {\n            this.lookButtonDown = true;\n        } break;\n            \n        case pc.MOUSEBUTTON_MIDDLE: \n        case pc.MOUSEBUTTON_RIGHT: {\n            this.panButtonDown = true;\n        } break;\n    }\n};\n\n\nMouseInput.prototype.onMouseUp = function (event) {\n    switch (event.button) {\n        case pc.MOUSEBUTTON_LEFT: {\n            this.lookButtonDown = false;\n        } break;\n            \n        case pc.MOUSEBUTTON_MIDDLE: \n        case pc.MOUSEBUTTON_RIGHT: {\n            this.panButtonDown = false;            \n        } break;\n    }\n};\n\n\nMouseInput.prototype.onMouseMove = function (event) {    \n    var mouse = pc.app.mouse;\n    if (this.lookButtonDown) {\n        this.orbitCamera.pitch -= event.dy * this.orbitSensitivity;\n        this.orbitCamera.yaw -= event.dx * this.orbitSensitivity;\n        \n    } else if (this.panButtonDown) {\n        this.pan(event);   \n    }\n    \n    this.lastPoint.set(event.x, event.y);\n};\n\n\nMouseInput.prototype.onMouseWheel = function (event) {\n    this.orbitCamera.distance -= event.wheel * this.distanceSensitivity * (this.orbitCamera.distance * 0.1);\n    event.event.preventDefault();\n};\n\n\nMouseInput.prototype.onMouseOut = function (event) {\n    this.lookButtonDown = false;\n    this.panButtonDown = false;\n};\n\n","// keyboard-input.js\nvar KeyboardInput = pc.createScript('keyboardInput');\n\n// initialize code called once per entity\nKeyboardInput.prototype.initialize = function() {\n    this.orbitCamera = this.entity.script.orbitCamera;\n};\n\n\nKeyboardInput.prototype.postInitialize = function() {\n    if (this.orbitCamera) {\n        this.startDistance = this.orbitCamera.distance;\n        this.startYaw = this.orbitCamera.yaw;\n        this.startPitch = this.orbitCamera.pitch;\n        this.startPivotPosition = this.orbitCamera.pivotPoint.clone();\n    }\n};\n\n// update code called every frame\nKeyboardInput.prototype.update = function(dt) {\n    if (this.orbitCamera) {\n        if (this.app.keyboard.wasPressed(pc.KEY_SPACE)) {\n            this.orbitCamera.reset(this.startYaw, this.startPitch, this.startDistance);\n            this.orbitCamera.pivotPoint = this.startPivotPosition;\n        }\n    }\n};\n\n\n","// orbit-camera.js\nvar OrbitCamera = pc.createScript('orbitCamera');\n\nOrbitCamera.attributes.add('distanceMax', {type: 'number', default: 0, title: 'Distance Max', description: 'Setting this at 0 will give an infinite distance limit'});\nOrbitCamera.attributes.add('distanceMin', {type: 'number', default: 0, title: 'Distance Min'});\nOrbitCamera.attributes.add('pitchAngleMax', {type: 'number', default: 90, title: 'Pitch Angle Max (degrees)'});\nOrbitCamera.attributes.add('pitchAngleMin', {type: 'number', default: -90, title: 'Pitch Angle Min (degrees)'});\n\nOrbitCamera.attributes.add('inertiaFactor', {\n    type: 'number',\n    default: 0,\n    title: 'Inertia Factor',\n    description: 'Higher value means that the camera will continue moving after the user has stopped dragging. 0 is fully responsive.'\n});\n\nOrbitCamera.attributes.add('focusEntity', {\n    type: 'entity',\n    title: 'Focus Entity',\n    description: 'Entity for the camera to focus on. If blank, then the camera will use the whole scene'\n});\n\nOrbitCamera.attributes.add('frameOnStart', {\n    type: 'boolean',\n    default: true,\n    title: 'Frame on Start',\n    description: 'Frames the entity or scene at the start of the application.\"'\n});\n\n\n// Property to get and set the distance between the pivot point and camera\n// Clamped between this.distanceMin and this.distanceMax\nObject.defineProperty(OrbitCamera.prototype, \"distance\", {\n    get: function() {\n        return this._targetDistance;\n    },\n\n    set: function(value) {\n        this._targetDistance = this._clampDistance(value);\n    }\n});\n\n\n// Property to get and set the pitch of the camera around the pivot point (degrees)\n// Clamped between this.pitchAngleMin and this.pitchAngleMax\n// When set at 0, the camera angle is flat, looking along the horizon\nObject.defineProperty(OrbitCamera.prototype, \"pitch\", {\n    get: function() {\n        return this._targetPitch;\n    },\n\n    set: function(value) {\n        this._targetPitch = this._clampPitchAngle(value);\n    }\n});\n\n\n// Property to get and set the yaw of the camera around the pivot point (degrees)\nObject.defineProperty(OrbitCamera.prototype, \"yaw\", {\n    get: function() {\n        return this._targetYaw;\n    },\n\n    set: function(value) {\n        this._targetYaw = value;\n\n        // Ensure that the yaw takes the shortest route by making sure that \n        // the difference between the targetYaw and the actual is 180 degrees\n        // in either direction\n        var diff = this._targetYaw - this._yaw;\n        var reminder = diff % 360;\n        if (reminder > 180) {\n            this._targetYaw = this._yaw - (360 - reminder);\n        } else if (reminder < -180) {\n            this._targetYaw = this._yaw + (360 + reminder);\n        } else {\n            this._targetYaw = this._yaw + reminder;\n        }\n    }\n});\n\n\n// Property to get and set the world position of the pivot point that the camera orbits around\nObject.defineProperty(OrbitCamera.prototype, \"pivotPoint\", {\n    get: function() {\n        return this._pivotPoint;\n    },\n\n    set: function(value) {\n        this._pivotPoint.copy(value);\n    }\n});\n\n\n// Moves the camera to look at an entity and all its children so they are all in the view\nOrbitCamera.prototype.focus = function (focusEntity) {\n    // Calculate an bounding box that encompasses all the models to frame in the camera view\n    this._buildAabb(focusEntity, 0);\n\n    var halfExtents = this._modelsAabb.halfExtents;\n\n    var distance = Math.max(halfExtents.x, Math.max(halfExtents.y, halfExtents.z));\n    distance = (distance / Math.tan(0.5 * this.entity.camera.fov * pc.math.DEG_TO_RAD));\n    distance = (distance * 2);\n\n    this.distance = distance;\n\n    this._removeInertia();\n\n    this._pivotPoint.copy(this._modelsAabb.center);\n};\n\n\nOrbitCamera.distanceBetween = new pc.Vec3();\n\n// Set the camera position to a world position and look at a world position\n// Useful if you have multiple viewing angles to swap between in a scene\nOrbitCamera.prototype.resetAndLookAtPoint = function (resetPoint, lookAtPoint) {\n    this.pivotPoint.copy(lookAtPoint);\n    this.entity.setPosition(resetPoint);\n\n    this.entity.lookAt(lookAtPoint);\n\n    var distance = OrbitCamera.distanceBetween;\n    distance.sub2(lookAtPoint, resetPoint);\n    this.distance = distance.length();\n\n    this.pivotPoint.copy(lookAtPoint);\n\n    var cameraQuat = this.entity.getRotation();\n    this.yaw = this._calcYaw(cameraQuat);\n    this.pitch = this._calcPitch(cameraQuat, this.yaw);\n\n    this._removeInertia();\n    this._updatePosition();\n};\n\n\n// Set camera position to a world position and look at an entity in the scene\n// Useful if you have multiple models to swap between in a scene\nOrbitCamera.prototype.resetAndLookAtEntity = function (resetPoint, entity) {\n    this._buildAabb(entity, 0);\n    this.resetAndLookAtPoint(resetPoint, this._modelsAabb.center);\n};\n\n\n// Set the camera at a specific, yaw, pitch and distance without inertia (instant cut)\nOrbitCamera.prototype.reset = function (yaw, pitch, distance) {\n    this.pitch = pitch;\n    this.yaw = yaw;\n    this.distance = distance;\n\n    this._removeInertia();\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////\n// Private methods\n\nOrbitCamera.prototype.initialize = function () {\n    var self = this;\n    var onWindowResize = function () {\n        self._checkAspectRatio();\n    };\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    this._checkAspectRatio();\n\n    // Find all the models in the scene that are under the focused entity\n    this._modelsAabb = new pc.BoundingBox();\n    this._buildAabb(this.focusEntity || this.app.root, 0);\n\n    this.entity.lookAt(this._modelsAabb.center);\n\n    this._pivotPoint = new pc.Vec3();\n    this._pivotPoint.copy(this._modelsAabb.center);\n\n    // Calculate the camera euler angle rotation around x and y axes\n    // This allows us to place the camera at a particular rotation to begin with in the scene\n    var cameraQuat = this.entity.getRotation();\n\n    // Preset the camera\n    this._yaw = this._calcYaw(cameraQuat);\n    this._pitch = this._clampPitchAngle(this._calcPitch(cameraQuat, this._yaw));\n    this.entity.setLocalEulerAngles(this._pitch, this._yaw, 0);\n\n    this._distance = 0;\n\n    this._targetYaw = this._yaw;\n    this._targetPitch = this._pitch;\n\n    // If we have ticked focus on start, then attempt to position the camera where it frames\n    // the focused entity and move the pivot point to entity's position otherwise, set the distance\n    // to be between the camera position in the scene and the pivot point\n    if (this.frameOnStart) {\n        this.focus(this.focusEntity || this.app.root);\n    } else {\n        var distanceBetween = new pc.Vec3();\n        distanceBetween.sub2(this.entity.getPosition(), this._pivotPoint);\n        this._distance = this._clampDistance(distanceBetween.length());\n    }\n\n    this._targetDistance = this._distance;\n\n    // Reapply the clamps if they are changed in the editor\n    this.on('attr:distanceMin', function (value, prev) {\n        this._targetDistance = this._clampDistance(this._distance);\n    });\n\n    this.on('attr:distanceMax', function (value, prev) {\n        this._targetDistance = this._clampDistance(this._distance);\n    });\n\n    this.on('attr:pitchAngleMin', function (value, prev) {\n        this._targetPitch = this._clampPitchAngle(this._pitch);\n    });\n\n    this.on('attr:pitchAngleMax', function (value, prev) {\n        this._targetPitch = this._clampPitchAngle(this._pitch);\n    });\n\n    // Focus on the entity if we change the focus entity\n    this.on('attr:focusEntity', function (value, prev) {\n        if (this.frameOnStart) {\n            this.focus(value || this.app.root);\n        } else {\n            this.resetAndLookAtEntity(this.entity.getPosition(), value || this.app.root);\n        }\n    });\n\n    this.on('attr:frameOnStart', function (value, prev) {\n        if (value) {\n            this.focus(this.focusEntity || this.app.root);\n        }\n    });\n\n    this.on('destroy', function() {\n        window.removeEventListener('resize', onWindowResize, false);\n    });\n};\n\n\nOrbitCamera.prototype.update = function(dt) {\n    // Add inertia, if any\n    var t = this.inertiaFactor === 0 ? 1 : Math.min(dt / this.inertiaFactor, 1);\n    this._distance = pc.math.lerp(this._distance, this._targetDistance, t);\n    this._yaw = pc.math.lerp(this._yaw, this._targetYaw, t);\n    this._pitch = pc.math.lerp(this._pitch, this._targetPitch, t);\n\n    this._updatePosition();\n};\n\n\nOrbitCamera.prototype._updatePosition = function () {\n    // Work out the camera position based on the pivot point, pitch, yaw and distance\n    this.entity.setLocalPosition(0,0,0);\n    this.entity.setLocalEulerAngles(this._pitch, this._yaw, 0);\n\n    var position = this.entity.getPosition();\n    position.copy(this.entity.forward);\n    position.scale(-this._distance);\n    position.add(this.pivotPoint);\n    this.entity.setPosition(position);\n};\n\n\nOrbitCamera.prototype._removeInertia = function () {\n    this._yaw = this._targetYaw;\n    this._pitch = this._targetPitch;\n    this._distance = this._targetDistance;\n};\n\n\nOrbitCamera.prototype._checkAspectRatio = function () {\n    var height = this.app.graphicsDevice.height;\n    var width = this.app.graphicsDevice.width;\n\n    // Match the axis of FOV to match the aspect ratio of the canvas so\n    // the focused entities is always in frame\n    this.entity.camera.horizontalFov = height > width;\n};\n\n\nOrbitCamera.prototype._buildAabb = function (entity, modelsAdded) {\n    // Generate a AABB for all model and render components\n    var i = 0, j = 0;\n    var meshInstances = null;\n    var allMeshInstances = [];\n    \n    var renders = entity.findComponents('render');\n    for (i = 0; i < renders.length; ++i) {\n        meshInstances = renders[i].meshInstances;\n        for (j = 0; j < meshInstances.length; j++) {\n            allMeshInstances.push(meshInstances[j]);\n        }\n    }  \n    \n    var models = entity.findComponents('model');\n    for (i = 0; i < models.length; ++i) {\n        meshInstances = models[i].meshInstances;\n        for (j = 0; j < meshInstances.length; j++) {\n            allMeshInstances.push(meshInstances[j]);\n        }\n    }  \n\n    for (i = 0; i < allMeshInstances.length; i++) {\n        if (modelsAdded === 0) {\n            this._modelsAabb.copy(allMeshInstances[i].aabb);\n        } else {\n            this._modelsAabb.add(allMeshInstances[i].aabb);\n        }\n\n        modelsAdded += 1;\n    }\n\n\n    return modelsAdded;\n};\n\n\nOrbitCamera.prototype._calcYaw = function (quat) {\n    var transformedForward = new pc.Vec3();\n    quat.transformVector(pc.Vec3.FORWARD, transformedForward);\n\n    return Math.atan2(-transformedForward.x, -transformedForward.z) * pc.math.RAD_TO_DEG;\n};\n\n\nOrbitCamera.prototype._clampDistance = function (distance) {\n    if (this.distanceMax > 0) {\n        return pc.math.clamp(distance, this.distanceMin, this.distanceMax);\n    } else {\n        return Math.max(distance, this.distanceMin);\n    }\n};\n\n\nOrbitCamera.prototype._clampPitchAngle = function (pitch) {\n    // Negative due as the pitch is inversed since the camera is orbiting the entity\n    return pc.math.clamp(pitch, -this.pitchAngleMax, -this.pitchAngleMin);\n};\n\n\nOrbitCamera.quatWithoutYaw = new pc.Quat();\nOrbitCamera.yawOffset = new pc.Quat();\n\nOrbitCamera.prototype._calcPitch = function(quat, yaw) {\n    var quatWithoutYaw = OrbitCamera.quatWithoutYaw;\n    var yawOffset = OrbitCamera.yawOffset;\n\n    yawOffset.setFromEulerAngles(0, -yaw, 0);\n    quatWithoutYaw.mul2(yawOffset, quat);\n\n    var transformedForward = new pc.Vec3();\n\n    quatWithoutYaw.transformVector(pc.Vec3.FORWARD, transformedForward);\n\n    return Math.atan2(transformedForward.y, -transformedForward.z) * pc.math.RAD_TO_DEG;\n};\n\n","// touch-input.js\nvar TouchInput = pc.createScript('touchInput');\n\nTouchInput.attributes.add('orbitSensitivity', {\n    type: 'number', \n    default: 0.4, \n    title: 'Orbit Sensitivity', \n    description: 'How fast the camera moves around the orbit. Higher is faster'\n});\n\nTouchInput.attributes.add('distanceSensitivity', {\n    type: 'number', \n    default: 0.2, \n    title: 'Distance Sensitivity', \n    description: 'How fast the camera moves in and out. Higher is faster'\n});\n\n// initialize code called once per entity\nTouchInput.prototype.initialize = function() {\n    this.orbitCamera = this.entity.script.orbitCamera;\n    \n    // Store the position of the touch so we can calculate the distance moved\n    this.lastTouchPoint = new pc.Vec2();\n    this.lastPinchMidPoint = new pc.Vec2();\n    this.lastPinchDistance = 0;\n    \n    if (this.orbitCamera && this.app.touch) {\n        // Use the same callback for the touchStart, touchEnd and touchCancel events as they \n        // all do the same thing which is to deal the possible multiple touches to the screen\n        this.app.touch.on(pc.EVENT_TOUCHSTART, this.onTouchStartEndCancel, this);\n        this.app.touch.on(pc.EVENT_TOUCHEND, this.onTouchStartEndCancel, this);\n        this.app.touch.on(pc.EVENT_TOUCHCANCEL, this.onTouchStartEndCancel, this);\n        \n        this.app.touch.on(pc.EVENT_TOUCHMOVE, this.onTouchMove, this);\n        \n        this.on('destroy', function() {\n            this.app.touch.off(pc.EVENT_TOUCHSTART, this.onTouchStartEndCancel, this);\n            this.app.touch.off(pc.EVENT_TOUCHEND, this.onTouchStartEndCancel, this);\n            this.app.touch.off(pc.EVENT_TOUCHCANCEL, this.onTouchStartEndCancel, this);\n\n            this.app.touch.off(pc.EVENT_TOUCHMOVE, this.onTouchMove, this);\n        });\n    }\n};\n\n\nTouchInput.prototype.getPinchDistance = function (pointA, pointB) {\n    // Return the distance between the two points\n    var dx = pointA.x - pointB.x;\n    var dy = pointA.y - pointB.y;    \n    \n    return Math.sqrt((dx * dx) + (dy * dy));\n};\n\n\nTouchInput.prototype.calcMidPoint = function (pointA, pointB, result) {\n    result.set(pointB.x - pointA.x, pointB.y - pointA.y);\n    result.scale(0.5);\n    result.x += pointA.x;\n    result.y += pointA.y;\n};\n\n\nTouchInput.prototype.onTouchStartEndCancel = function(event) {\n    // We only care about the first touch for camera rotation. As the user touches the screen, \n    // we stored the current touch position\n    var touches = event.touches;\n    if (touches.length == 1) {\n        this.lastTouchPoint.set(touches[0].x, touches[0].y);\n    \n    } else if (touches.length == 2) {\n        // If there are 2 touches on the screen, then set the pinch distance\n        this.lastPinchDistance = this.getPinchDistance(touches[0], touches[1]);\n        this.calcMidPoint(touches[0], touches[1], this.lastPinchMidPoint);\n    }\n};\n\n\nTouchInput.fromWorldPoint = new pc.Vec3();\nTouchInput.toWorldPoint = new pc.Vec3();\nTouchInput.worldDiff = new pc.Vec3();\n\n\nTouchInput.prototype.pan = function(midPoint) {\n    var fromWorldPoint = TouchInput.fromWorldPoint;\n    var toWorldPoint = TouchInput.toWorldPoint;\n    var worldDiff = TouchInput.worldDiff;\n    \n    // For panning to work at any zoom level, we use screen point to world projection\n    // to work out how far we need to pan the pivotEntity in world space \n    var camera = this.entity.camera;\n    var distance = this.orbitCamera.distance;\n    \n    camera.screenToWorld(midPoint.x, midPoint.y, distance, fromWorldPoint);\n    camera.screenToWorld(this.lastPinchMidPoint.x, this.lastPinchMidPoint.y, distance, toWorldPoint);\n    \n    worldDiff.sub2(toWorldPoint, fromWorldPoint);\n     \n    this.orbitCamera.pivotPoint.add(worldDiff);    \n};\n\n\nTouchInput.pinchMidPoint = new pc.Vec2();\n\nTouchInput.prototype.onTouchMove = function(event) {\n    var pinchMidPoint = TouchInput.pinchMidPoint;\n    \n    // We only care about the first touch for camera rotation. Work out the difference moved since the last event\n    // and use that to update the camera target position \n    var touches = event.touches;\n    if (touches.length == 1) {\n        var touch = touches[0];\n        \n        this.orbitCamera.pitch -= (touch.y - this.lastTouchPoint.y) * this.orbitSensitivity;\n        this.orbitCamera.yaw -= (touch.x - this.lastTouchPoint.x) * this.orbitSensitivity;\n        \n        this.lastTouchPoint.set(touch.x, touch.y);\n    \n    } else if (touches.length == 2) {\n        // Calculate the difference in pinch distance since the last event\n        var currentPinchDistance = this.getPinchDistance(touches[0], touches[1]);\n        var diffInPinchDistance = currentPinchDistance - this.lastPinchDistance;\n        this.lastPinchDistance = currentPinchDistance;\n                \n        this.orbitCamera.distance -= (diffInPinchDistance * this.distanceSensitivity * 0.1) * (this.orbitCamera.distance * 0.1);\n        \n        // Calculate pan difference\n        this.calcMidPoint(touches[0], touches[1], pinchMidPoint);\n        this.pan(pinchMidPoint);\n        this.lastPinchMidPoint.copy(pinchMidPoint);\n    }\n};\n\n\n","// custom_shader.js\nvar CustomShader = pc.createScript('customShader');\n\nCustomShader.attributes.add('vs', {\n    type: 'asset',\n    assetType: 'shader',\n    title: 'Vertex Shader'\n});\n\nCustomShader.attributes.add('fs', {\n    type: 'asset',\n    assetType: 'shader',\n    title: 'Fragment Shader'\n});\n\n/*============================================================ COLOR */\nCustomShader.attributes.add('usineColor', {\n    type: 'rgba',\n    title: 'Usine color'\n});\nCustomShader.attributes.add('commercialColor', {\n    type: 'rgba',\n    title: 'Agence commercial color'\n});\nCustomShader.attributes.add('rdColor', {\n    type: 'rgba',\n    title: 'R&D color'\n});\nCustomShader.attributes.add('siegeColor', {\n    type: 'rgba',\n    title: 'Siege Social color'\n});\nCustomShader.attributes.add('techniqueColor', {\n    type: 'rgba',\n    title: 'Centre technique color'\n});\n\n/*============================================================ CHIFFRE */\nCustomShader.attributes.add('usine', {\n    type: 'number',\n    title: 'Usine Number',\n    default:0.2\n});\nCustomShader.attributes.add('commercial', {\n    type: 'number',\n    title: 'Agence commercial Number',\n    default:0.2\n});\nCustomShader.attributes.add('rd', {\n    type: 'number',\n    title: 'R&D Number',\n    default:0.2\n});\nCustomShader.attributes.add('siege', {\n    type: 'number',\n    title: 'Siege Social Number',\n    default:0.2\n});\nCustomShader.attributes.add('technique', {\n    type: 'number',\n    title: 'Centre technique Number',\n    default:0.2\n});\n\n// initialize code called once per entity\nCustomShader.prototype.initialize = function() {\n    this.time = 0;\n    \n    var app = this.app;    \n    \n    let wallMaterial = new pc.StandardMaterial().clone(this.entity.model.model.meshInstances[2].material);\n   \n    // Create a new material and set the shader\n    // let wallMaterial = new pc.Material();\n    // wallMaterial.shader = this.shader;\n    wallMaterial.chunks.diffusePS = this.fs.resource;\n    \n        wallMaterial.diffuseMap = new pc.Texture(this.app.graphicsDevice, {\n            width: 1,\n            height: 1,\n            format: pc.PIXELFORMAT_R8_G8_B8\n        });\n    \n    wallMaterial.setParameter('uUsineColor', new pc.Vec3(this.usineColor.r,this.usineColor.g,this.usineColor.b).data);\n    wallMaterial.setParameter('uCommercialColor', new pc.Vec3(this.commercialColor.r,this.commercialColor.g,this.commercialColor.b).data);\n    wallMaterial.setParameter('uRDColor', new pc.Vec3(this.rdColor.r,this.rdColor.g,this.rdColor.b).data);\n    wallMaterial.setParameter('uSiegeColor', new pc.Vec3(this.siegeColor.r,this.siegeColor.g,this.siegeColor.b).data);\n    wallMaterial.setParameter('uTechniqueColor', new pc.Vec3(this.techniqueColor.r,this.techniqueColor.g,this.techniqueColor.b).data);\n    \n     wallMaterial.setParameter('uUsine', this.usine);\n    wallMaterial.setParameter('uCommercial', this.commercial);\n    wallMaterial.setParameter('uRD', this.rd);\n    wallMaterial.setParameter('uSiege', this.siege);\n    wallMaterial.setParameter('uTechnique', this.technique);\n\n    // Replace the material on the model with our new material\n    wallMaterial.update();\n    this.entity.model.model.meshInstances[2].material = wallMaterial;\n    \n    let topMaterial = new pc.StandardMaterial();\n    if(this.technique >0){\n         topMaterial.diffuse.set(this.techniqueColor.r,this.techniqueColor.g,this.techniqueColor.b);\n        // console.log(renders[1].meshInstances[0].material.emissive)\n    }else if(this.siege>0){\n        topMaterial.diffuse.set(this.siegeColor.r,this.siegeColor.g,this.siegeColor.b);\n        // console.log(renders[1].meshInstances[0].material.emissive)\n    }else if(this.rd > 0){\n         topMaterial.diffuse.set(this.rdColor.r,this.rdColor.g,this.rdColor.b);\n        // console.log(renders[1].meshInstances[0].material.emissive)\n    }else if(this.commercial >0){\n        topMaterial.diffuse.set(this.commercialColor.r,this.commercialColor.g,this.commercialColor.b)\n         \n    }else{\n        topMaterial.diffuse.set(this.usineColor.r,this.usineColor.g,this.usineColor.b);\n         \n    }\n    topMaterial.update();\n    this.entity.model.model.meshInstances[0].material = topMaterial;\n};\n// initialize code called once per entity\n// CustomShader.prototype.initialize = function() {\n//     this.time = 0;\n    \n//     var app = this.app;\n//     var gd = app.graphicsDevice;\n    \n\n//     var vertexShader = this.vs.resource;\n//     var fragmentShader = \"precision \" + gd.precision + \" float;\\n\";\n//     fragmentShader = fragmentShader + this.fs.resource;\n\n//     // A shader definition used to create a new shader.\n//     var shaderDefinition = {\n//         attributes: {\n//             aPosition: pc.SEMANTIC_POSITION,\n//             aUv0: pc.SEMANTIC_TEXCOORD0\n//         },\n//         vshader: vertexShader,\n//         fshader: fragmentShader\n//     };\n\n//     // Create the shader from the definition\n//     this.shader = new pc.Shader(gd, shaderDefinition);\n\n//     // Create a new material and set the shader\n//     let wallMaterial = new pc.Material();\n//     wallMaterial.shader = this.shader;\n    \n    \n//     wallMaterial.setParameter('uUsineColor', new pc.Vec4(this.usineColor.r,this.usineColor.g,this.usineColor.b,1.0).data);\n//     wallMaterial.setParameter('uCommercialColor', new pc.Vec4(this.commercialColor.r,this.commercialColor.g,this.commercialColor.b,1.0).data);\n//     wallMaterial.setParameter('uRDColor', new pc.Vec4(this.rdColor.r,this.rdColor.g,this.rdColor.b,1.0).data);\n//     wallMaterial.setParameter('uSiegeColor', new pc.Vec4(this.siegeColor.r,this.siegeColor.g,this.siegeColor.b,1.0).data);\n//     wallMaterial.setParameter('uTechniqueColor', new pc.Vec4(this.techniqueColor.r,this.techniqueColor.g,this.techniqueColor.b,1.0).data);\n    \n//      wallMaterial.setParameter('uUsine', this.usine);\n//     wallMaterial.setParameter('uCommercial', this.commercial);\n//     wallMaterial.setParameter('uRD', this.rd);\n//     wallMaterial.setParameter('uSiege', this.siege);\n//     wallMaterial.setParameter('uTechnique', this.technique);\n\n//     // Replace the material on the model with our new material\n//     this.entity.model.model.meshInstances[2].material = wallMaterial;\n    \n//     let topMaterial = new pc.BasicMaterial();\n//     if(this.technique >0){\n//          topMaterial.color.set(this.techniqueColor.r,this.techniqueColor.g,this.techniqueColor.b);\n//         // console.log(renders[1].meshInstances[0].material.emissive)\n//     }else if(this.siege>0){\n//         topMaterial.color.set(this.siegeColor.r,this.siegeColor.g,this.siegeColor.b);\n//         // console.log(renders[1].meshInstances[0].material.emissive)\n//     }else if(this.rd > 0){\n//          topMaterial.color.set(this.rdColor.r,this.rdColor.g,this.rdColor.b);\n//         // console.log(renders[1].meshInstances[0].material.emissive)\n//     }else if(this.commercial >0){\n//         topMaterial.color.set(this.commercialColor.r,this.commercialColor.g,this.commercialColor.b)\n         \n//     }else{\n//         topMaterial.color.set(this.usineColor.r,this.usineColor.g,this.usineColor.b);\n         \n//     }\n//     topMaterial.update();\n//     this.entity.model.model.meshInstances[0].material = topMaterial;\n// };\n// update code called every frame\nCustomShader.prototype.update = function(dt) {\n    // Update the time value in the material\n    // this.material.setParameter('uUsine',1);\n};\n\nCustomShader.prototype.updateChiffre = function(data) {\n    // this.time = 4;\n     // console.log(this.entity.render.material);\n     // this.entity.render.material.setParameter('uUsine', 1);\n    // this.material.setParameter('uCommercial', data.commercial);\n    // this.material.setParameter('uRD', data.rd);\n    // this.material.setParameter('uSiege', data.siege);\n    // this.material.setParameter('uTechnique', data.technique);\n};\n\n","// spawner.js\nvar Spawner = pc.createScript('spawner');\n\nvar entityCount = 150;\nvar radius =8;\nvar minScale = 1.5;\nvar maxScale = 3.5;\n\n\n// initialize code called once per entity\nSpawner.prototype.initialize = function() {\n    // this.app.fire(\"set:json\", \"http://127.0.0.1/1337/uploads/arkj_6d132c6ac2.json\");\n    // console.log(\"test\")\n\n};\n\n// update code called every frame\nSpawner.prototype.update = function(dt) {\n\n};\n\n\nSpawner.prototype.spawn = function(json) {\n    for(i=0;i<json.spots.length;i++){\n        var templateAsset = this.app.assets.get(58515737);\n        var instance = templateAsset.resource.instantiate();\n        \n        \n        var\n            lat= json.spots[i].lat,\n            lon=json.spots[i].long,\n            phi   = (90-lat)*(Math.PI/180),\n            theta = (lon+180)*(Math.PI/180);\n\n\n        var x = -((radius) * Math.sin(phi)*Math.cos(theta)),\n            z = ((radius) * Math.sin(phi)*Math.sin(theta)),\n            y = ((radius) * Math.cos(phi));\n        instance.setLocalPosition(\n             x,y,z\n        );\n        instance.lookAt(new pc.Vec3(0,0,0));\n        instance.rotateLocal(90,0 , 0);\n        var yScale = json.spots[i].employee.map(json.minMax[0],json.minMax[1],minScale,maxScale);\n         instance.setLocalScale(0.1,yScale,0.1);\n\n        instance.name=\"Data-\"+i;\n        \n    \n        instance.script.customShader.usine = json.spots[i].colorData.usine;\n        instance.script.customShader.commercial = json.spots[i].colorData.commercial;\n        instance.script.customShader.rd = json.spots[i].colorData.rd;\n        instance.script.customShader.siege = json.spots[i].colorData.siege;\n        instance.script.customShader.technique = json.spots[i].colorData.technique;\n        \n        instance.dataStore= json.spots[i].datas;\n        instance.children[1].collision.halfExtents = new pc.Vec3(0.1, yScale, 0.1);\n        \n        // console.log(instance.children[1].collision)\n        // console.log(instance.localScale.y)\n        this.app.root.addChild(instance);\n    }\n};\n\nNumber.prototype.map = function (in_min, in_max, out_min, out_max) {\n  return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\n","// raycast.js\nvar Raycast = pc.createScript('raycast');\nvar uiEntity;\n// initialize code called once per entity\nRaycast.prototype.initialize = function() {\n     uiEntity = this.app.root.findByName(\"ui\");\n    if (!this.entity.camera) {\n        console.error('This script must be applied to an entity with a camera component.');\n        return;\n    }\n\n    // Add a mousedown event handler\n    this.app.mouse.on(pc.EVENT_MOUSEDOWN, this.mouseDown, this);\n\n    // Add touch event only if touch is available\n    if (this.app.touch) {\n        this.app.touch.on(pc.EVENT_TOUCHSTART, this.touchStart, this);\n    }\n};\n\nRaycast.prototype.mouseDown = function (e) {\n    this.doRaycast(e.x, e.y);\n};\n\nRaycast.prototype.touchStart = function (e) {\n    // Only perform the raycast if there is one finger on the screen\n    if (e.touches.length === 1) {\n        this.doRaycast(e.touches[0].x, e.touches[0].y);\n    }\n    e.event.preventDefault();\n};\n\nRaycast.prototype.doRaycast = function (screenX, screenY) {\n    // The pc.Vec3 to raycast from (the position of the camera)\n    \n    let from = this.entity.getPosition();\n\n    // The pc.Vec3 to raycast to (the click position projected onto the camera's far clip plane)\n    let to = this.entity.camera.screenToWorld(screenX, screenY, this.entity.camera.farClip);\n\n    // Raycast between the two points and return the closest hit result\n    let result = this.app.systems.rigidbody.raycastFirst(from, to);\n    // If there was a hit, store the entity\n    if (result) {\n        let hitEntity = result.entity;\n        if(hitEntity.name != \"earth\"){\n             uiEntity.script.ui.select(hitEntity.parent.dataStore);\n        }\n       \n    }    \n};\n\n","// ui.js\nvar Ui = pc.createScript('ui');\n\nUi.attributes.add('css', {type: 'asset', assetType:'css', title: 'CSS Asset'});\nUi.attributes.add('html', {type: 'asset', assetType:'html', title: 'HTML Asset'});\n\n\nvar orbit;\nvar leftMove = false;\nvar rightMove = false;\nvar topMove = false;\nvar bottomMove = false;\nvar autoRotate = true;\nvar autoRotateTimeout = null;\nvar speed = 20;\nUi.prototype.initialize = function () {\n    // create STYLE element\n    var style = document.createElement('style');\n\n    // append to head\n    document.head.appendChild(style);\n    style.innerHTML = this.css.resource || '';\n    \n    // Add the HTML\n    this.div = document.createElement('div');\n    this.div.classList.add('container');\n    this.div.innerHTML = this.html.resource || '';\n    \n    pc.app.graphicsDevice.canvas.parentNode.appendChild(this.div);\n    \n    this.div.addEventListener(\"mousedown\",function(e){\n        e.stopPropagation();\n    });\n    this.initEventListener();\n    orbit = this.app.root.findByName(\"Camera\").script.orbitCamera;\n    // orbit.distance = 80;\n};\n\nUi.prototype.select= function(data){\n    \n  var template = document.querySelector(\"#textrow\");\n\n  // On clone la ligne et on l'insère dans le tableau\n  var body = document.querySelector(\".dataContainer\");\n    body.innerHTML =\"\";\n    for(let i =0;i<data.length;i++){\n        var clone = document.importNode(template.content, true);\n\n        clone.querySelector('.name').textContent = data[i].name;\n        clone.querySelector('.country').textContent = data[i].country;\n        clone.querySelector('.city').textContent = data[i].city;\n        clone.querySelector('.type').textContent = data[i].site;\n        clone.querySelector('.employee').textContent = data[i].employee;\n\n        body.appendChild(clone);\n    }\n\n};\n\nUi.prototype.initEventListener = function(){\n    document.querySelector('.scroll_top').addEventListener(\"mousedown\",function(e){\n        var body = document.querySelector(\".dataContainer\");\n        body.scrollTo({\n           top : body.scrollTop-200,\n            behavior: \"smooth\"\n        }); \n        e.stopPropagation();\n    });\n    document.querySelector('.scroll_bottom').addEventListener(\"mousedown\",function(e){\n        var body = document.querySelector(\".dataContainer\");\n        body.scrollTo({\n           top : body.scrollTop+200,\n            behavior: \"smooth\"\n        }); \n        e.stopPropagation();\n    });\n    //---------------------------CAMERA\n    document.querySelector('.cam_left').addEventListener(\"mousedown\",function(e){\n        leftMove = true;\n        autoRotate =false;\n        clearTimeout(autoRotateTimeout);\n        e.stopPropagation();\n    });\n    document.querySelector('.cam_right').addEventListener(\"mousedown\",function(e){\n        rightMove = true;\n        autoRotate =false;\n        clearTimeout(autoRotateTimeout);\n        e.stopPropagation();\n    });\n    document.querySelector('.cam_top').addEventListener(\"mousedown\",function(e){\n        topMove = true;\n        autoRotate =false;\n        clearTimeout(autoRotateTimeout);\n        e.stopPropagation();\n    });\n    document.querySelector('.cam_bottom').addEventListener(\"mousedown\",function(e){\n        bottomMove = true;\n        autoRotate =false;\n        clearTimeout(autoRotateTimeout);\n        e.stopPropagation();\n    });\n    \n    document.querySelector('body').addEventListener(\"mouseup\",function(e){\n       leftMove =false;\n        rightMove =false;\n        topMove =false;\n        bottomMove =false;\n        autoRotateTimeout = setTimeout(function(){\n            autoRotate =true;\n        },3000)\n    });\n}\n\n// update code called every frame\nUi.prototype.update = function(dt) {\n    if(leftMove){\n        orbit.yaw -= dt*speed;\n    }else if(rightMove){\n        orbit.yaw += dt*speed;\n    }else if(topMove){\n         orbit.pitch -= dt*speed;\n    }else if(bottomMove){\n        orbit.pitch += dt*speed;\n    }else if(autoRotate){\n        orbit.yaw += dt;\n    }\n};\n\n","// dataStore.js\nvar DataStore = pc.createScript('dataStore');\n\nvar data ={\n    country : \"\",\n    city : \"\",\n    type:\"\",\n    employee:0\n};\n// initialize code called once per entity\nDataStore.prototype.initialize = function(_d) {\n    let r = new pc.Color(Math.random(),Math.random(),Math.random(),1);\n    var material = new pc.BasicMaterial();\n    material.color.set(Math.random(),Math.random(),Math.random());\n    material.update();\n    this.entity.model.model.meshInstances[0].material = material;\n    \n};\nDataStore.prototype.getData = function() {\n    return data;\n};\n// update code called every frame\nDataStore.prototype.update = function(dt) {\n\n};\n\n// swap method called for script hot-reloading\n// inherit your script state here\n// DataStore.prototype.swap = function(old) { };\n\n// to learn more about script anatomy, please read:\n// https://developer.playcanvas.com/en/user-manual/scripting/\n\n","// jsonReader.js\nvar jsonReader = pc.createScript('csvReader');\n\nvar jsonData = {};\nvar spotData = {\n    minMax : [],\n    spots:[]\n};\n\njsonReader.attributes.add('jsonFile', {\n    type: 'asset',\n    assetType: 'json'\n});\n\njsonReader.attributes.add('distanceMerge', {\n    type: 'number',\n    default: 1\n});\njsonReader.attributes.add('distanceOffset', {\n    type: 'number',\n    default: 1\n});\njsonReader.attributes.add('offset', {\n    type: 'number',\n    default: 1\n});\n\njsonReader.attributes.add('autoplay', {\n    type: 'boolean',\n    default: false\n});\n\n// initialize code called once per entity\njsonReader.prototype.initialize = function() {\n    if(this.autoplay){\n        jsonData = this.jsonFile.resource;\n        this.start();\n    }\n    this.app.on(\"set:json\", function (json) {\n        jsonData = json;\n\n        this.start();\n    }, this);\n};\n\njsonReader.prototype.start = function(){\n    this.mergeClose(jsonData);\n    this.findAverage();\n    this.offsetClose();\n    this.setColor();\n    var size = this.minMax();\n    spotData.minMax = [size.x,size.y];\n    this.entity.script.spawner.spawn(spotData);\n}\n// update code called every frame\njsonReader.prototype.update = function(dt) {\n    \n};\n\njsonReader.prototype.mergeClose = function(jsonData) {\n    let json = jsonData.data.slice(0);\n    while(json.length >0) {\n        let spot = {\n            employee : 0,\n            datas :[]\n        };\n        json[0].lat = parseFloat(json[0].lat);\n        json[0].long = parseFloat(json[0].long);\n        json[0].employee = parseInt(json[0].employee);\n        spot.datas.push(json[0]);\n        spot.employee = json[0].employee;\n        \n        \n        for (let y = json.length - 1; y >= 0; y--) {\n             if(y!= 0 ){\n                 let distance =  new pc.Vec2(parseFloat(json[0].lat),parseFloat(json[0].long)).distance(new pc.Vec2(parseFloat(json[y].lat),parseFloat(json[y].long)));\n                 if(distance<this.distanceMerge && json[0].country == json[y].country){\n                    json[y].lat = parseFloat(json[y].lat);\n                    json[y].long = parseFloat(json[y].long);\n                    json[y].employee = parseInt(json[y].employee);\n                     spot.employee+=parseInt(json[y].employee);\n                     spot.datas.push(json[y]);\n                     json.splice(y,1);\n                 }\n             }\n        }\n        \n        json.splice(0,1);\n        spotData.spots.push(spot);\n    }\n};\njsonReader.prototype.findAverage = function() {\n     for(i=0;i<spotData.spots.length;i++){\n         let lat  = 0;\n         let long = 0;\n         \n         for(y=0;y<spotData.spots[i].datas.length;y++){\n             lat += spotData.spots[i].datas[y].lat;\n             long += spotData.spots[i].datas[y].long;\n         }\n         lat = lat/spotData.spots[i].datas.length;\n         long = long/spotData.spots[i].datas.length;\n         spotData.spots[i].lat = lat;\n         spotData.spots[i].long = long;\n     }\n};\njsonReader.prototype.offsetClose = function() {\n    for(i=0;i<spotData.spots.length;i++){\n        for (y=0;y<spotData.spots.length;y++) {\n             if(y!= i ){\n                var spotI = new pc.Vec2(spotData.spots[i].lat,spotData.spots[i].long);\n                var spotY = new pc.Vec2(spotData.spots[y].lat,spotData.spots[y].long);\n                var distance =  spotI.distance(spotY);\n                 if(distance<this.distanceOffset){\n                     let direction = spotI.sub(spotY);\n                     direction.normalize();\n                     spotData.spots[i].lat += direction.x*this.offset/2;\n                     spotData.spots[i].long += direction.y*this.offset/2;\n                     spotData.spots[y].lat -= direction.x*this.offset/2;\n                     spotData.spots[y].long -= direction.y*this.offset/2;\n                 }\n             }\n        }\n     }\n};\n\njsonReader.prototype.setColor = function() {\n    for(i=0;i<spotData.spots.length;i++){\n        let colorData = {\n            usine:0,\n            commercial:0,\n            rd:0,\n            siege:0,\n            technique:0,\n        };\n        for(y=0;y<spotData.spots[i].datas.length;y++){\n            let pourc = spotData.spots[i].datas[y].employee/spotData.spots[i].employee;\n            switch (spotData.spots[i].datas[y].site) {\n              case 'USINE DE PRODUCTION':\n                    colorData.usine+=pourc;\n                break;\n              case 'AGENCE COMMERCIALE':\n                    colorData.commercial+=pourc;\n                break;\n              case 'CENTRE R&D':\n                    colorData.rd+=pourc;\n                break;\n              case 'SIEGE SOCIAL':\n                    colorData.siege+=pourc;\n                break;\n              case 'CENTRE TECHNIQUE':\n                    colorData.technique+=pourc;\n                break;\n              default:\n            }\n        }\n          \n        spotData.spots[i].colorData = colorData;\n    }\n};\n\njsonReader.prototype.minMax = function() {\n    let minMax= new pc.Vec2(99999,0);\n    for(i=0;i<spotData.spots.length;i++){\n        if(spotData.spots[i].employee<minMax.x){\n            minMax.x = spotData.spots[i].employee;\n        }\n        if(spotData.spots[i].employee>minMax.y){\n            minMax.y = spotData.spots[i].employee;\n        }\n    }\n    return minMax;\n};\n// swap method called for script hot-reloading\n// inherit your script state here\n// CsvReader.prototype.swap = function(old) { };\n\n// to learn more about script anatomy, please read:\n// http://developer.playcanvas.com/en/user-manual/scripting/\n// \njsonReader.prototype.getData = ()=>{\n    return jsonData;\n};\n\n","// Empty.js\npc.script.createLoadingScreen(function (app) {\n    var showSplash = function () {\n        // splash wrapper\n        var wrapper = document.createElement('div');\n        wrapper.id = 'application-splash-wrapper';\n        document.body.appendChild(wrapper);\n\n        // splash\n\n\n\n    };\n\n    var hideSplash = function () {\n        var splash = document.getElementById('application-splash-wrapper');\n        splash.parentElement.removeChild(splash);\n    };\n\n    var setProgress = function (value) {\n        var bar = document.getElementById('progress-bar');\n        if(bar) {\n            value = Math.min(1, Math.max(0, value));\n            bar.style.width = value * 100 + '%';\n        }\n    };\n\n    var createCss = function () {\n        var css = [\n            'body {',\n            '    background-color: #283538;',\n            '}',\n            '',\n            '#application-splash-wrapper {',\n            \n            '    position: absolute;',\n            '    top: 0;',\n            '    left: 0;',\n            '    height: 100%;',\n            '    width: 100%;',\n            '    background-color: #283538;',\n            '}',\n            '',\n            '#application-splash {',\n            '    position: absolute;',\n            '    top: calc(50% - 28px);',\n            '    width: 264px;',\n            '    left: calc(50% - 132px);',\n            '}',\n            '',\n            '#application-splash img {',\n            '    width: 100%;',\n            '}',\n            '',\n            '#progress-bar-container {',\n            '    margin: 20px auto 0 auto;',\n            'display:none',\n            '    height: 2px;',\n            '    width: 100%;',\n            '    background-color: #1d292c;',\n            '}',\n            '',\n            '#progress-bar {',\n            '    width: 0%;',\n            '    height: 100%;',\n            '    background-color: #f60;',\n            '}',\n            '',\n            '@media (max-width: 480px) {',\n            '    #application-splash {',\n            '        width: 170px;',\n            '        left: calc(50% - 85px);',\n            '    }',\n            '}'\n        ].join('\\n');\n\n        var style = document.createElement('style');\n        style.type = 'text/css';\n        if (style.styleSheet) {\n            style.styleSheet.cssText = css;\n        } else {\n            style.appendChild(document.createTextNode(css));\n        }\n\n        document.head.appendChild(style);\n    };\n\n    // createCss();\n    // showSplash();\n\n    // app.on('preload:end', function () {\n    //     app.off('preload:progress');\n    // });\n    // app.on('preload:progress', setProgress);\n    // app.on('start', hideSplash);\n});\n\n"]}